// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/booking.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace BloodBankLibrary.Core.Booking {
  public static partial class BookingService
  {
    static readonly string __ServiceName = "BloodBankLibrary.Core.Booking.BookingService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.GetAllRequest> __Marshaller_BloodBankLibrary_Core_Booking_GetAllRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.GetAllRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.GetAllResponse> __Marshaller_BloodBankLibrary_Core_Booking_GetAllResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.GetAllResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.GetByIdRequest> __Marshaller_BloodBankLibrary_Core_Booking_GetByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.GetByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.GetByIdResponse> __Marshaller_BloodBankLibrary_Core_Booking_GetByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.GetByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.CreateRequest> __Marshaller_BloodBankLibrary_Core_Booking_CreateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.CreateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.CreateResponse> __Marshaller_BloodBankLibrary_Core_Booking_CreateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.CreateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.DeleteRequest> __Marshaller_BloodBankLibrary_Core_Booking_DeleteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.DeleteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.DeleteResponse> __Marshaller_BloodBankLibrary_Core_Booking_DeleteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.DeleteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.UpdateRequest> __Marshaller_BloodBankLibrary_Core_Booking_UpdateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.UpdateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BloodBankLibrary.Core.Booking.UpdateResponse> __Marshaller_BloodBankLibrary_Core_Booking_UpdateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BloodBankLibrary.Core.Booking.UpdateResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BloodBankLibrary.Core.Booking.GetAllRequest, global::BloodBankLibrary.Core.Booking.GetAllResponse> __Method_GetAll = new grpc::Method<global::BloodBankLibrary.Core.Booking.GetAllRequest, global::BloodBankLibrary.Core.Booking.GetAllResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_BloodBankLibrary_Core_Booking_GetAllRequest,
        __Marshaller_BloodBankLibrary_Core_Booking_GetAllResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BloodBankLibrary.Core.Booking.GetByIdRequest, global::BloodBankLibrary.Core.Booking.GetByIdResponse> __Method_GetById = new grpc::Method<global::BloodBankLibrary.Core.Booking.GetByIdRequest, global::BloodBankLibrary.Core.Booking.GetByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_BloodBankLibrary_Core_Booking_GetByIdRequest,
        __Marshaller_BloodBankLibrary_Core_Booking_GetByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BloodBankLibrary.Core.Booking.CreateRequest, global::BloodBankLibrary.Core.Booking.CreateResponse> __Method_Create = new grpc::Method<global::BloodBankLibrary.Core.Booking.CreateRequest, global::BloodBankLibrary.Core.Booking.CreateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_BloodBankLibrary_Core_Booking_CreateRequest,
        __Marshaller_BloodBankLibrary_Core_Booking_CreateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BloodBankLibrary.Core.Booking.DeleteRequest, global::BloodBankLibrary.Core.Booking.DeleteResponse> __Method_Delete = new grpc::Method<global::BloodBankLibrary.Core.Booking.DeleteRequest, global::BloodBankLibrary.Core.Booking.DeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_BloodBankLibrary_Core_Booking_DeleteRequest,
        __Marshaller_BloodBankLibrary_Core_Booking_DeleteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BloodBankLibrary.Core.Booking.UpdateRequest, global::BloodBankLibrary.Core.Booking.UpdateResponse> __Method_Update = new grpc::Method<global::BloodBankLibrary.Core.Booking.UpdateRequest, global::BloodBankLibrary.Core.Booking.UpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_BloodBankLibrary_Core_Booking_UpdateRequest,
        __Marshaller_BloodBankLibrary_Core_Booking_UpdateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BloodBankLibrary.Core.Booking.GetByIdRequest, global::BloodBankLibrary.Core.Booking.GetAllResponse> __Method_GetByHostId = new grpc::Method<global::BloodBankLibrary.Core.Booking.GetByIdRequest, global::BloodBankLibrary.Core.Booking.GetAllResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByHostId",
        __Marshaller_BloodBankLibrary_Core_Booking_GetByIdRequest,
        __Marshaller_BloodBankLibrary_Core_Booking_GetAllResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::BloodBankLibrary.Core.Booking.BookingReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BookingService</summary>
    [grpc::BindServiceMethod(typeof(BookingService), "BindService")]
    public abstract partial class BookingServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BloodBankLibrary.Core.Booking.GetAllResponse> GetAll(global::BloodBankLibrary.Core.Booking.GetAllRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BloodBankLibrary.Core.Booking.GetByIdResponse> GetById(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BloodBankLibrary.Core.Booking.CreateResponse> Create(global::BloodBankLibrary.Core.Booking.CreateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BloodBankLibrary.Core.Booking.DeleteResponse> Delete(global::BloodBankLibrary.Core.Booking.DeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BloodBankLibrary.Core.Booking.UpdateResponse> Update(global::BloodBankLibrary.Core.Booking.UpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BloodBankLibrary.Core.Booking.GetAllResponse> GetByHostId(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BookingService</summary>
    public partial class BookingServiceClient : grpc::ClientBase<BookingServiceClient>
    {
      /// <summary>Creates a new client for BookingService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BookingServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BookingService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BookingServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BookingServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BookingServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.GetAllResponse GetAll(global::BloodBankLibrary.Core.Booking.GetAllRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.GetAllResponse GetAll(global::BloodBankLibrary.Core.Booking.GetAllRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.GetAllResponse> GetAllAsync(global::BloodBankLibrary.Core.Booking.GetAllRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.GetAllResponse> GetAllAsync(global::BloodBankLibrary.Core.Booking.GetAllRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.GetByIdResponse GetById(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.GetByIdResponse GetById(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.GetByIdResponse> GetByIdAsync(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.GetByIdResponse> GetByIdAsync(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.CreateResponse Create(global::BloodBankLibrary.Core.Booking.CreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.CreateResponse Create(global::BloodBankLibrary.Core.Booking.CreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.CreateResponse> CreateAsync(global::BloodBankLibrary.Core.Booking.CreateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.CreateResponse> CreateAsync(global::BloodBankLibrary.Core.Booking.CreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.DeleteResponse Delete(global::BloodBankLibrary.Core.Booking.DeleteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.DeleteResponse Delete(global::BloodBankLibrary.Core.Booking.DeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.DeleteResponse> DeleteAsync(global::BloodBankLibrary.Core.Booking.DeleteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.DeleteResponse> DeleteAsync(global::BloodBankLibrary.Core.Booking.DeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.UpdateResponse Update(global::BloodBankLibrary.Core.Booking.UpdateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.UpdateResponse Update(global::BloodBankLibrary.Core.Booking.UpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.UpdateResponse> UpdateAsync(global::BloodBankLibrary.Core.Booking.UpdateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.UpdateResponse> UpdateAsync(global::BloodBankLibrary.Core.Booking.UpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.GetAllResponse GetByHostId(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByHostId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::BloodBankLibrary.Core.Booking.GetAllResponse GetByHostId(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByHostId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.GetAllResponse> GetByHostIdAsync(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByHostIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::BloodBankLibrary.Core.Booking.GetAllResponse> GetByHostIdAsync(global::BloodBankLibrary.Core.Booking.GetByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByHostId, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BookingServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BookingServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BookingServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_GetByHostId, serviceImpl.GetByHostId).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BookingServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BloodBankLibrary.Core.Booking.GetAllRequest, global::BloodBankLibrary.Core.Booking.GetAllResponse>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_GetById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BloodBankLibrary.Core.Booking.GetByIdRequest, global::BloodBankLibrary.Core.Booking.GetByIdResponse>(serviceImpl.GetById));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BloodBankLibrary.Core.Booking.CreateRequest, global::BloodBankLibrary.Core.Booking.CreateResponse>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BloodBankLibrary.Core.Booking.DeleteRequest, global::BloodBankLibrary.Core.Booking.DeleteResponse>(serviceImpl.Delete));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BloodBankLibrary.Core.Booking.UpdateRequest, global::BloodBankLibrary.Core.Booking.UpdateResponse>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_GetByHostId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BloodBankLibrary.Core.Booking.GetByIdRequest, global::BloodBankLibrary.Core.Booking.GetAllResponse>(serviceImpl.GetByHostId));
    }

  }
}
#endregion
